node('master') {
    def jobBaseName = "${env.JOB_NAME}".split('/').last()
    stage('checkout') {
        git branch: 'master',
            credentialsId: 'github-sshkey',
            url: 'git@github.com:prasantabarik/custompipeline.git'
    }
    stage("kube-hunter") {
        withCredentials([string(credentialsId: "${jobBaseName}.url", variable: "serverUrl")]) {
            withKubeConfig([credentialsId: "${jobBaseName}.token", serverUrl: "${serverUrl}"]) {
              sh "kubectl delete -f security-tests/kube-hunter.yaml --ignore-not-found=true"
              sh "kubectl apply -f security-tests/kube-hunter.yaml"
              sh "kubectl wait --for=condition=complete --timeout=120s job/kube-hunter"
              sh "kubectl logs job/kube-hunter"
              sh "kubectl delete -f security-tests/kube-hunter.yaml"
            }
        }
    }
    stage("kube-bench") {
        withCredentials([string(credentialsId: "${jobBaseName}.url", variable: "serverUrl")]) {
            withKubeConfig([credentialsId: "${jobBaseName}.token", serverUrl: "${serverUrl}"]) {
              sh "kubectl delete -f security-tests/kube-bench.yaml --ignore-not-found=true"
              sh "kubectl apply -f security-tests/kube-bench.yaml"
              sh "kubectl wait --for=condition=complete --timeout=120s job/kube-bench"
              sh "kubectl logs job/kube-bench"
              sh "kubectl delete -f security-tests/kube-bench.yaml"
            }
        }
    }
}
